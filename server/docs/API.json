{
  "openapi": "3.0.1",
  "info": {
    "title": "API Player",
    "description": "API Player",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/api/v1"
    }
  ],
  "tags": [
    {
      "name": "Game Player",
      "description": "Game Player resources"
    }
  ],
  "paths": {
    "/player": {
      "get": {
        "tags": ["Player"],
        "summary": "List all player",
        "description": "Description for list player",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Player"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Player"],
        "summary": "Add new player",
        "description": "Create new Player",
        "requestBody": {
          "description": "Players object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InputPlayer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successfully create new player",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Player"
                }
              }
            }
          },
          "400": {
            "description": "Failed to create new player",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/FailedInput"
                    },
                    {
                      "$ref": "#/components/schemas/FailedPassword"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "path": null,
    "/player/{playerId}": {
      "get": {
        "tags": ["Player"],
        "summary": "Find player by ID",
        "description": "Returns a single Player",
        "parameters": [
          {
            "name": "playerId",
            "in": "path",
            "description": "ID of player to return",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Player"
                }
              }
            }
          },
          "400": {
            "description": "Player Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Player"],
        "summary": "Update an existing player",
        "description": "Return of new version of player",
        "requestBody": {
          "description": "Player object that needs to be added",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InputPlayer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Player successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Player with id ${id} successfully updated"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Player not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "500": {
            "description": "Update failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to update"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Player"],
        "summary": "Remove existing player",
        "parameters": [
          {
            "name": "playerId",
            "in": "path",
            "description": "player ID to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfuly delete article",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Player with ID ${id}, was deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot delete Player with ID=${id}. Maybe Player was not found!"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/players/exp/{playerId}": {
      "post": {
        "tags": ["Player"],
        "summary": "Add a player experience",
        "description": "Return of new version of player experience",
        "requestBody": {
          "description": "Player object that needs to be added",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "experience": {
                    "type": "integer",
                    "example": 100
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Player successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Player with ID = ${id} gain ${exp} experience. Total experience = ${player.experience}"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Failed"
                    },
                    {
                      "$ref": "#/components/schemas/FailedExp"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Player not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "500": {
            "description": "Update failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to update"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Player": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "example": 1
            },
            "username": {
              "type": "string",
              "example": "asdfghjkl_123"
            },
            "email": {
              "type": "string",
              "example": "asdfghjkl_123@gmail.com"
            },
            "password": {
              "type": "string",
              "example": "$2b$10$4bAhcGkhOYp7b7VGZfy9AO91mjCa/g8gaR3N/Cv0l2r6qI//qMYUy"
            },
            "experience": {
              "type": "integer",
              "example": 600000
            },
            "lvl": {
              "type": "integer",
              "example": 600
            },
            "createdAt": {
              "type": "string",
              "example": "2022-06-30T13:19:39.036Z"
            },
            "updatedAt": {
              "type": "string",
              "example": "2022-06-30T13:19:39.036Z"
            }
          }
        }
      },
      "InputPlayers": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "asdfghjkl_123"
          },
          "email": {
            "type": "string",
            "example": "asdfghjkl_123@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "player1234567890"
          },
          "experience": {
            "type": "integer",
            "example": 600000
          }
        }
      },
      "FailedInput": {
        "type": "object",
        "properties": {
          "result": {
            "type": "string",
            "example": "Failed"
          },
          "message": {
            "type": "string",
            "example": "username or email cannot empty"
          }
        }
      },
      "FailedPassword": {
        "type": "object",
        "properties": {
          "result": {
            "type": "string",
            "example": "Failed"
          },
          "message": {
            "type": "string",
            "example": "password cannot be empty"
          }
        }
      },
      "NotFound": {
        "type": "object",
        "properties": {
          "result": {
            "type": "string",
            "example": "Not Found"
          },
          "message": {
            "type": "string",
            "example": "Player with ${id} not found"
          }
        }
      },
      "Failed": {
        "type": "object",
        "properties": {
          "result": {
            "type": "string",
            "example": "FAILED"
          },
          "message": {
            "type": "string",
            "example": "Cannot update Player with id=${id}!"
          }
        }
      },
      "FailedExp": {
        "type": "object",
        "properties": {
          "result": {
            "type": "string",
            "example": "FAILED"
          },
          "message": {
            "type": "string",
            "example": "Exp field cannot be empty"
          }
        }
      }
    }
  }
}
